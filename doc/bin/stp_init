#!/bin/bash
# stp_init - Initialize STP in a project
# Usage: stp_init <project_name> [directory]

# Exit on error
set -e

# Function to display error messages
error() {
  echo "Error: $1" >&2
  exit 1
}

# Function to display usage information
usage() {
  echo "Usage: stp init <project_name> [directory]"
  echo ""
  echo "Initialize Steel Thread Project in the specified directory"
  echo ""
  echo "Arguments:"
  echo "  project_name  Name of the project (required)"
  echo "  directory     Target directory (optional, defaults to current directory)"
  echo ""
  echo "Example:"
  echo "  stp init \"My Project\" ./my-project"
  exit 1
}

# Check for required arguments
if [ $# -lt 1 ]; then
  error "Project name is required"
  usage
fi

# Get arguments
PROJECT_NAME="$1"
TARGET_DIR="${2:-.}"

# Check if STP_HOME is set
if [ -z "$STP_HOME" ]; then
  error "STP_HOME environment variable is not set"
fi

# Create target directory if it doesn't exist
mkdir -p "$TARGET_DIR"

# Check if target directory is empty if it already exists
if [ -d "$TARGET_DIR" ] && [ "$(ls -A "$TARGET_DIR")" ]; then
  echo "Warning: Target directory is not empty. STP will add files to the existing directory."
  echo "Press Enter to continue or Ctrl+C to cancel."
  read -r
fi

# Create directory structure
echo "Creating STP directory structure..."
mkdir -p "$TARGET_DIR"/doc/{prj/st,eng/tpd,usr,llm,_templ,bin}

# Get author information from git if available
if command -v git &> /dev/null && git config user.name &> /dev/null; then
  AUTHOR="$(git config user.name)"
else
  AUTHOR="${USER:-Unknown}"
fi

# Get current date
DATE="$(date '+%Y-%m-%d')"

# Create configuration file
echo "Creating configuration file..."
cat > "$TARGET_DIR/.stp-config" << EOF
# STP Project Configuration
PROJECT_NAME="$PROJECT_NAME"
AUTHOR="$AUTHOR"
CREATED_DATE="$DATE"
ST_PREFIX="ST"
EOF

# Copy templates
echo "Copying templates..."
if [ -d "$STP_HOME/doc/_templ" ]; then
  cp -r "$STP_HOME/doc/_templ"/* "$TARGET_DIR/doc/_templ/"
else
  cp -r "$STP_HOME/_templ"/* "$TARGET_DIR/doc/_templ/"
fi

# Create initial prj/wip.md
echo "Creating initial documents..."
TEMPL_DIR=""
if [ -d "$STP_HOME/doc/_templ" ]; then
  TEMPL_DIR="$STP_HOME/doc/_templ"
else
  TEMPL_DIR="$STP_HOME/_templ"
fi

sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/prj/_wip.md" > "$TARGET_DIR/doc/prj/wip.md"

# Create initial prj/journal.md
sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/prj/_journal.md" > "$TARGET_DIR/doc/prj/journal.md"

# Create initial prj/st/steel_threads.md
sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/prj/st/_steel_threads.md" > "$TARGET_DIR/doc/prj/st/steel_threads.md"

# Create initial eng/tpd/technical_product_design.md
mkdir -p "$TARGET_DIR/doc/eng/tpd"
sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/eng/tpd/_technical_product_design.md" > "$TARGET_DIR/doc/eng/tpd/technical_product_design.md"

# Create initial llm/llm_preamble.md
sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/llm/_llm_preamble.md" > "$TARGET_DIR/doc/llm/llm_preamble.md"

# Create initial usr/ documents
sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/usr/_user_guide.md" > "$TARGET_DIR/doc/usr/user_guide.md"

sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/usr/_reference_guide.md" > "$TARGET_DIR/doc/usr/reference_guide.md"

sed -e "s/\[\[PROJECT_NAME\]\]/$PROJECT_NAME/g" \
    -e "s/\[\[AUTHOR\]\]/$AUTHOR/g" \
    -e "s/\[\[DATE\]\]/$DATE/g" \
    "$TEMPL_DIR/usr/_deployment_guide.md" > "$TARGET_DIR/doc/usr/deployment_guide.md"

# Copy scripts
echo "Copying scripts..."
if [ -d "$STP_HOME/doc/bin" ]; then
  mkdir -p "$TARGET_DIR/bin"
  cp "$STP_HOME/doc/bin"/stp* "$TARGET_DIR/bin/"
  cp "$STP_HOME/doc/bin"/stp* "$TARGET_DIR/doc/bin/"
else 
  mkdir -p "$TARGET_DIR/bin"
  cp "$STP_HOME/bin"/stp* "$TARGET_DIR/bin/"
  cp "$STP_HOME/bin"/stp* "$TARGET_DIR/doc/bin/"
fi

# Make scripts executable
chmod +x "$TARGET_DIR"/bin/stp*
chmod +x "$TARGET_DIR"/doc/bin/stp*

# Create local configuration for STP
echo "Creating local configuration..."
cat > "$TARGET_DIR/bin/stp_config.sh" << EOF
#!/bin/bash
# Local STP configuration for $PROJECT_NAME

# Project settings
export STP_PROJECT="$PROJECT_NAME"
export STP_AUTHOR="$AUTHOR"
EOF

echo "STP initialized for project: $PROJECT_NAME in $TARGET_DIR"
echo ""
echo "To get started:"
echo "  1. Review the initial documentation in doc/prj/, doc/eng/, doc/usr/, and doc/llm/"
echo "  2. Create your first steel thread: stp st new \"Initial Setup\""
echo "  3. Update doc/prj/wip.md with your current focus"
echo ""
echo "For help, run: stp help"