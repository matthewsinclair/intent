#!/bin/bash
# intent_upgrade - Upgrade any STP version to Intent
# Usage: intent upgrade [--backup-dir DIR]

# Exit on error
set -e

# Function to display error messages
error() {
  echo "Error: $1" >&2
  exit 1
}

# Source helpers
INTENT_BIN="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
INTENT_HOME="$(cd "$INTENT_BIN/.." && pwd)"
source "$INTENT_BIN/intent_helpers"

# Get target version
TARGET_VERSION="$(get_intent_version 2>/dev/null || echo "2.2.1")"

# Function to display usage information
usage() {
  cat << EOF
Usage: intent upgrade [--backup-dir DIR]

Upgrade any STP version project to Intent v$TARGET_VERSION

Options:
  --backup-dir DIR    Custom backup directory name (default: .backup/backup-TIMESTAMP)
  --no-backup         Skip backup creation (dangerous!)
  -h, --help          Show this help message

Examples:
  intent upgrade
  intent upgrade --backup-dir my-backup

This command will:
1. Detect the current STP/Intent version
2. Create a backup of the current state
3. Migrate directory structure from stp/* to intent/*
4. Convert YAML configs to JSON format
5. Update all metadata and file formats
6. Create .intent/config.json
7. Initialize agent configuration (v2.1.0+)
8. Update CLAUDE.md with Intent v$TARGET_VERSION guidelines
EOF
  exit 0
}

# Parse options
BACKUP_DIR=""
NO_BACKUP=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    --backup-dir)
      BACKUP_DIR="$2"
      shift 2
      ;;
    --no-backup)
      NO_BACKUP=true
      shift
      ;;
    -h|--help)
      usage
      ;;
    *)
      error "Unknown option: $1"
      ;;
  esac
done

# Detect current version
echo "Detecting current project version..."
VERSION=$(detect_stp_version . || echo "")

if [ -z "$VERSION" ]; then
  echo "Could not detect project version."
  echo ""
  echo "This may not be an STP/Intent project, or it may be using an unrecognized structure."
  echo "To create a new Intent project, use: intent init"
  exit 1
fi

# Always show version information
echo ""
echo "Current version: $VERSION"
echo "Target version:  $TARGET_VERSION"
echo ""

# Check if already at target version
if [ "$VERSION" = "$TARGET_VERSION" ]; then
  echo "✓ Project is already at Intent v$TARGET_VERSION"
  echo "  No upgrade needed."
  exit 0
fi

# Determine if migration is needed
if ! needs_v2_migration "$VERSION" && ! needs_v2_1_upgrade "$VERSION" && ! needs_v2_2_upgrade "$VERSION" && ! needs_v2_2_1_upgrade "$VERSION"; then
  echo "✓ Project is already up to date at version $VERSION"
  echo "  No upgrade path available from $VERSION to $TARGET_VERSION"
  exit 0
fi

echo "→ Upgrade available: $VERSION → $TARGET_VERSION"

# Create backup unless disabled
if [ "$NO_BACKUP" != true ]; then
  # Set backup directory name
  if [ -z "$BACKUP_DIR" ]; then
    BACKUP_NAME="backup-$(date +%Y%m%d-%H%M%S)"
  else
    # If user provided a backup dir, extract just the name
    BACKUP_NAME=$(basename "$BACKUP_DIR")
  fi
  
  # Always put backups under .backup directory
  BACKUP_DIR=".backup/$BACKUP_NAME"
  
  echo "Creating backup in $BACKUP_DIR..."
  mkdir -p "$BACKUP_DIR"
  
  # Backup relevant directories
  for dir in stp .stp-config .intent intent backlog CLAUDE.md; do
    if [ -e "$dir" ]; then
      cp -r "$dir" "$BACKUP_DIR/" 2>/dev/null || true
    fi
  done
  
  echo "Backup created successfully"
fi

echo ""
echo "Starting migration to Intent v$TARGET_VERSION..."
echo ""

# Create v2.0.0 directory structure
echo "Creating Intent v2.0.0 directory structure..."
create_v2_directory_structure .

# Migrate based on version
case "$VERSION" in
  "0.0.0")
    echo "Migrating from v0.0.0..."
    migrate_v0_to_v2 .
    ;;
  "1.0.0"|"1.2.0")
    echo "Migrating from v$VERSION..."
    migrate_v1_2_0_to_v2 .
    ;;
  "1.2.1")
    echo "Migrating from v1.2.1..."
    migrate_v1_2_1_to_v2 .
    ;;
  "2.0.0")
    echo "Upgrading from v2.0.0 to v2.1.0..."
    migrate_v2_0_to_v2_1 .
    ;;
  "2.1.0")
    echo "Upgrading from v2.1.0 to v$TARGET_VERSION..."
    migrate_v2_1_to_v2_2 .
    ;;
  "2.2.0")
    echo "Upgrading from v2.2.0 to v$TARGET_VERSION..."
    migrate_v2_2_to_v2_2_1 .
    ;;
  *)
    error "Unknown version: $VERSION"
    ;;
esac

# Migrate backlog if it exists
if [ -d "backlog" ]; then
  echo "Backlog directory found, preserving..."
  # Update backlog config if needed
  if [ -f "backlog/.config" ]; then
    if ! grep -q "task_prefix=ST" "backlog/.config"; then
      echo "task_prefix=ST" >> "backlog/.config"
    fi
  fi
fi


# Ensure proper upgrade path to v$TARGET_VERSION
# Only run intermediate upgrades for older versions
if [ "$VERSION" != "2.0.0" ] && [ "$VERSION" != "2.1.0" ] && [ "$VERSION" != "2.2.0" ]; then
  echo "Initializing agent configuration..."
  migrate_v2_0_to_v2_1 .
  echo "Applying v2.2.0 upgrade..."
  migrate_v2_1_to_v2_2 .
  echo "Finalizing v$TARGET_VERSION upgrade..."
  migrate_v2_2_to_v2_2_1 .
elif [ "$VERSION" = "2.0.0" ]; then
  # 2.0.0 needs all three upgrades
  echo "Applying v2.1.0 upgrade..."
  migrate_v2_0_to_v2_1 .
  echo "Applying v2.2.0 upgrade..."
  migrate_v2_1_to_v2_2 .
  echo "Finalizing v$TARGET_VERSION upgrade..."
  migrate_v2_2_to_v2_2_1 .
elif [ "$VERSION" = "2.1.0" ]; then
  # 2.1.0 needs 2.2.0 and 2.2.1 upgrades
  echo "Applying v2.2.0 upgrade..."
  migrate_v2_1_to_v2_2 .
  echo "Finalizing v$TARGET_VERSION upgrade..."
  migrate_v2_2_to_v2_2_1 .
fi
# 2.2.0 case is handled by the main switch statement above

# Preserve agent manifests
if [ -d ".intent/agents" ]; then
  echo "Agent manifests found, preserving..."
fi
if [ -d "intent/agents/.manifest" ]; then
  echo "Project agent manifests found, preserving..."
fi

# Create or update CLAUDE.md
echo "Updating CLAUDE.md..."
create_claude_md .

# Final message
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✓ Upgrade completed successfully!"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "Version upgraded: $VERSION → $TARGET_VERSION"
echo ""
echo "Summary of changes:"
if [ "$VERSION" != "2.0.0" ]; then
  echo "- Directory structure migrated from stp/* to intent/*"
  echo "- Configuration converted from YAML to JSON"
fi
echo "- Metadata updated to Intent v$TARGET_VERSION format"
echo "- Created/updated .intent/config.json"
echo "- Initialized agent configuration"
echo "- Updated CLAUDE.md with Intent guidelines"

if [ "$NO_BACKUP" != true ]; then
  echo ""
  echo "Backup location: $BACKUP_DIR"
fi

echo ""
echo "Next steps:"
echo "1. Review the migrated content in the intent/ directory"
echo "2. Test commands with 'intent' instead of 'stp'"
echo "3. Run 'intent doctor' to verify configuration"
echo "4. Run 'intent agents list' to see available agents"
echo "5. Delete the old stp/ directory when ready"

# Offer to remove old stp directory
echo ""
echo "The old stp/ directory is still present. You can:"
echo "- Keep it for reference"
echo "- Remove it manually with: rm -rf stp/"
echo "- Let this script remove it (type 'yes' to confirm)"
echo ""
read -p "Remove old stp/ directory now? (yes/no): " response

if [ "$response" = "yes" ]; then
  echo "Removing stp/ directory..."
  rm -rf stp/
  echo "Old directory removed."
else
  echo "Keeping old stp/ directory for reference."
fi