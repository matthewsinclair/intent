#!/bin/bash
# intent_upgrade - Upgrade any STP version to Intent v2.2.0
# Usage: intent upgrade [--backup-dir DIR]

# Exit on error
set -e

# Source common libraries
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/intent_config"
source "$SCRIPT_DIR/intent_helpers"

# Load configuration
load_intent_config

# Function to display error messages
error() {
  echo "Error: $1" >&2
  exit 1
}

# Function to display usage information
usage() {
  cat << EOF
Usage: intent upgrade [--backup-dir DIR]

Upgrade any STP version project to Intent v2.2.0

Options:
  --backup-dir DIR    Custom backup directory (default: backup-TIMESTAMP)
  --no-backup         Skip backup creation (dangerous!)
  -h, --help          Show this help message

Examples:
  intent upgrade
  intent upgrade --backup-dir my-backup

This command will:
1. Detect the current STP/Intent version
2. Create a backup of the current state
3. Migrate directory structure from stp/* to intent/*
4. Convert YAML configs to JSON format
5. Update all metadata and file formats
6. Create .intent/config.json
7. Initialize agent configuration (v2.1.0+)
8. Update CLAUDE.md with Intent v2.2.0 guidelines
EOF
  exit 0
}

# Parse options
BACKUP_DIR=""
NO_BACKUP=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    --backup-dir)
      BACKUP_DIR="$2"
      shift 2
      ;;
    --no-backup)
      NO_BACKUP=true
      shift
      ;;
    -h|--help)
      usage
      ;;
    *)
      error "Unknown option: $1"
      ;;
  esac
done

# Detect current version
echo "Detecting current project version..."
VERSION=$(detect_stp_version .)

if [ "$VERSION" = "2.2.0" ]; then
  echo "Project is already at Intent v2.2.0"
  exit 0
fi

if [ -z "$VERSION" ]; then
  error "Could not detect STP version. Is this an STP project?"
fi

echo "Current version: $VERSION"

# Determine if migration is needed
if ! needs_v2_migration "$VERSION" && ! needs_v2_1_upgrade "$VERSION" && ! needs_v2_2_upgrade "$VERSION"; then
  echo "Project is already up to date."
  exit 0
fi

# Create backup unless disabled
if [ "$NO_BACKUP" != true ]; then
  if [ -z "$BACKUP_DIR" ]; then
    BACKUP_DIR="backup-$(date +%Y%m%d-%H%M%S)"
  fi
  
  echo "Creating backup in $BACKUP_DIR..."
  mkdir -p "$BACKUP_DIR"
  
  # Backup relevant directories
  for dir in stp .stp-config backlog CLAUDE.md; do
    if [ -e "$dir" ]; then
      cp -r "$dir" "$BACKUP_DIR/" 2>/dev/null || true
    fi
  done
  
  echo "Backup created successfully"
fi

echo ""
echo "Starting migration to Intent v2.2.0..."
echo ""

# Create v2.0.0 directory structure
echo "Creating Intent v2.0.0 directory structure..."
create_v2_directory_structure .

# Migrate based on version
case "$VERSION" in
  "0.0.0")
    echo "Migrating from v0.0.0..."
    migrate_v0_to_v2 .
    ;;
  "1.0.0"|"1.2.0")
    echo "Migrating from v$VERSION..."
    migrate_v1_2_0_to_v2 .
    ;;
  "1.2.1")
    echo "Migrating from v1.2.1..."
    migrate_v1_2_1_to_v2 .
    ;;
  "2.0.0")
    echo "Upgrading from v2.0.0 to v2.1.0..."
    migrate_v2_0_to_v2_1 .
    ;;
  "2.1.0")
    echo "Upgrading from v2.1.0 to v2.2.0..."
    migrate_v2_1_to_v2_2 .
    ;;
  *)
    error "Unknown version: $VERSION"
    ;;
esac

# Migrate backlog if it exists
if [ -d "backlog" ]; then
  echo "Backlog directory found, preserving..."
  # Update backlog config if needed
  if [ -f "backlog/.config" ]; then
    if ! grep -q "task_prefix=ST" "backlog/.config"; then
      echo "task_prefix=ST" >> "backlog/.config"
    fi
  fi
fi


# Ensure proper upgrade path to v2.2.0
if [ "$VERSION" != "2.0.0" ] && [ "$VERSION" != "2.1.0" ]; then
  echo "Initializing agent configuration..."
  migrate_v2_0_to_v2_1 .
fi

# Ensure v2.2.0 upgrade for all versions
if [ "$VERSION" != "2.1.0" ]; then
  echo "Finalizing v2.2.0 upgrade..."
  migrate_v2_1_to_v2_2 .
fi

# Preserve agent manifests
if [ -d ".intent/agents" ]; then
  echo "Agent manifests found, preserving..."
fi
if [ -d "intent/agents/.manifest" ]; then
  echo "Project agent manifests found, preserving..."
fi

# Create or update CLAUDE.md
echo "Updating CLAUDE.md..."
create_claude_md .

# Final message
echo ""
echo "Migration to Intent v2.2.0 completed successfully!"
echo ""
echo "Summary of changes:"
if [ "$VERSION" != "2.0.0" ]; then
  echo "- Directory structure migrated from stp/* to intent/*"
  echo "- Configuration converted from YAML to JSON"
fi
echo "- Metadata updated to Intent v2.2.0 format"
echo "- Created/updated .intent/config.json"
echo "- Initialized agent configuration"
echo "- Updated CLAUDE.md with Intent guidelines"

if [ "$NO_BACKUP" != true ]; then
  echo ""
  echo "Backup location: $BACKUP_DIR"
fi

echo ""
echo "Next steps:"
echo "1. Review the migrated content in the intent/ directory"
echo "2. Test commands with 'intent' instead of 'stp'"
echo "3. Run 'intent doctor' to verify configuration"
echo "4. Run 'intent agents list' to see available agents"
echo "5. Delete the old stp/ directory when ready"

# Offer to remove old stp directory
echo ""
echo "The old stp/ directory is still present. You can:"
echo "- Keep it for reference"
echo "- Remove it manually with: rm -rf stp/"
echo "- Let this script remove it (type 'yes' to confirm)"
echo ""
read -p "Remove old stp/ directory now? (yes/no): " response

if [ "$response" = "yes" ]; then
  echo "Removing stp/ directory..."
  rm -rf stp/
  echo "Old directory removed."
else
  echo "Keeping old stp/ directory for reference."
fi