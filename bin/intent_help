#!/bin/bash
# intent_help - Display help for Intent commands
# Usage: intent help [command]

# Exit on error
set -e

# Source common library (but don't load project config - help is a global command)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Function to display error messages
error() {
  echo "Error: $1" >&2
  exit 1
}

# Check if INTENT_HOME is set
if [ -z "$INTENT_HOME" ]; then
  error "INTENT_HOME environment variable is not set"
fi

# Display command-specific help
if [ $# -eq 1 ]; then
  COMMAND="$1"
  HELP_FILE="$INTENT_HOME/lib/help/$COMMAND.help.md"
  
  if [ -f "$HELP_FILE" ]; then
    # Display help file
    cat "$HELP_FILE"
  else
    # Check if command exists but doesn't have help
    COMMAND_SCRIPT="$INTENT_HOME/bin/intent_$COMMAND"
    if [ -f "$COMMAND_SCRIPT" ]; then
      echo "No help available for command '$COMMAND'"
      echo ""
      echo "Usage information may be available by running:"
      echo "  intent $COMMAND --help"
    else
      error "Unknown command '$COMMAND'"
    fi
  fi
  exit 0
fi

# Display general help
cat << EOF
Intent v2.0.0 - Structured Development Process

A system for structured development and documentation with LLM collaboration.
Formerly known as STP (Steel Thread Process).

Usage: intent <command> [options] [arguments]

Core:
  info             Display Intent status and project information
  init             Initialize a new Intent project
  st               Manage steel threads
  bl               Backlog.md integration
  agents           Manage Claude Code sub-agents
  doctor           Check and fix configuration
  upgrade          Upgrade from STP to Intent v2.0.0
  help             Display help information

Configuration:
  bootstrap        Initial Intent setup (first-time users)
  config           Display configuration settings

Utility:
  task             Create and manage tasks linked to steel threads
  status           Show project and steel thread status
  migrate          Migrate tasks from steel threads to Backlog.md
  llm              Display LLM-specific guidance
  organize         Organize steel threads by status

Other:
EOF

# Find all intent_* commands in bin directory
for script in "$INTENT_HOME"/bin/intent_*; do
  if [ -f "$script" ] && [ -x "$script" ]; then
    # Extract command name from script name (remove intent_ prefix)
    cmd_name=$(basename "$script" | sed 's/^intent_//')
    
    # Skip certain internal scripts and those manually listed above
    case "$cmd_name" in
      config|helpers|main|agents|info|init|st|bl|doctor|upgrade|help|bootstrap|task|status|migrate|llm|organize) continue ;;
    esac
    
    # Construct help file path
    help_file="$INTENT_HOME/lib/help/$cmd_name.help.md"
    
    # Get short description from help file if it exists
    if [ -f "$help_file" ]; then
      # Extract text between @short: and the next section (@)
      short_desc=$(awk '/^@short:/{flag=1; next} /^@/{if(flag){flag=0}} flag' "$help_file" | \
                   awk '{$1=$1}1' | \
                   tr '\n' ' ' | \
                   sed 's/^ *//; s/ *$//')
      printf "  %-16s %s\n" "$cmd_name" "$short_desc"
    else
      # Try to get description from script header
      desc=$(head -n 10 "$script" | grep -E "^# intent_$cmd_name -" | sed "s/^# intent_$cmd_name - //")
      if [ -n "$desc" ]; then
        printf "  %-16s %s\n" "$cmd_name" "$desc"
      else
        printf "  %-16s %s\n" "$cmd_name" "(no description available)"
      fi
    fi
  fi
done

cat << EOF

For more information on a specific command, run:
  intent help <command>

Quick Start:
  1. First-time setup: intent bootstrap
  2. New project: intent init "Project Name"
  3. New steel thread: intent st new "Title"
  4. Upgrade from STP: intent upgrade

For complete documentation, see:
  $INTENT_HOME/docs/user_guide.md
  $INTENT_HOME/docs/reference_guide.md
EOF